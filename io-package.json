{
  "common": {
    "name": "alexa-cloud",
    "desc": "ioBroker bridge for alexa.",
    "version": "0.1.1",
    "title": "Alexa Cloud",
    "authors": [
      "Richard Huelsberg <rh+github@hrdns.de>"
    ],
    "license": "MIT",
    "platform": "Javascript/Node.js",
    "mode": "daemon",
    "enabled": true,
    "compact": true,
    "messagebox": true,
    "readme": "https://github.com/sgc-fireball/iobroker.alexa-cloud/blob/master/README.md",
    "loglevel": "info",
    "icon": "icon.png",
    "materialize": true,
    "keywords": [
      "alexa",
      "cloud",
      "bridge",
      "homematic",
      "bidcos",
      "eq3",
      "ELV",
      "CCU",
      "CCU1",
      "CCU2",
      "CCU3",
      "OCCU",
      "raspberrymatic",
      "rpc",
      "xmlrpc",
      "binrpc",
      "CUxD"
    ],
    "extIcon": "https://raw.githubusercontent.com/sgc-fireball/iobroker.alexa-cloud/master/admin/icon.png",
    "type": "iot-systems",
    "config": {
      "width": 800,
      "height": 850,
      "minWidth": 400,
      "minHeight": 400
    }
  },
  "instanceObjects": [
    {
      "_id": "info",
      "type": "channel",
      "common": {
        "name": "Information"
      },
      "native": {}
    },
    {
      "_id": "info.connection",
      "type": "state",
      "common": {
        "role": "indicator.connected",
        "name": "If communication with amazon works",
        "type": "boolean",
        "read": true,
        "write": false,
        "def": false
      },
      "native": {}
    }
  ],
  "native": {
    "port": 31000
  },
  "objects": [
    {
      "_id": "_design/alexa-cloud",
      "language": "javascript",
      "views": {
        "listHomeMaticDevices": {
          "map": "function(doc) {\n    if (doc._id.match(/^hm-rpc\\.[0-9]+\\.[A-Za-z0-9_-]+$/)) {\n        if (!!doc && !!doc.common && !!doc.native) {\n            if (!!doc.common.name && !!doc.native.TYPE && !!doc.native.ADDRESS) {\n                emit(doc._id, {\n                    id: doc._id,\n                    name: doc.common.name,\n                    type: doc.native.TYPE,\n                    address: doc.native.ADDRESS\n                });\n            }\n        }\n    }\n}"
        },
        "listHueDevices": {
          "map": "function(doc) {\n    if (doc._id.match(/^hue-extended\\.[0-9]+\\.lights\\.[^\\.]+]$/)) {\n        emit(doc._id, doc);\n    }\n}"
        }
      }
    }
  ]
}